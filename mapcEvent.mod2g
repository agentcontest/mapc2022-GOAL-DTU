use "knowledge_generated" as knowledge.

use "mapcInit".
use "modules/resetAgent".
use "modules/communication/receiveConnectionUpdates".
use "modules/communication/receiveConnectionRequests".
use "modules/communication/sendConnectionUpdates".
use "modules/percepts/getPercepts".
use "modules/percepts/updateBeliefState".
use "modules/communication/sendConnectionRequests".
use "modules/communication/shareInformation".
use "modules/taskPlanning/findTaskMaster".
use "modules/taskPlanning/taskPlanning_TaskMaster".
use "modules/taskPlanning/taskPlanning_OtherAgents".
use "modules/goals/updateGoals".


module mapcEvent {
	
	% Restart the agent
	if percept(step(0)), bel(restart)
	then mapcInit + delete(restart).
	
	if bel(steps(NrOfSteps)), bel(LastStep is NrOfSteps - 1)
	then {
	
		% Reset the agent on the last step
		if percept(step(LastStep))  then resetAgent + insert(restart) + print("Resetting").
			
		if percept(step(S), S > 0, S < LastStep) then {
			
			if a-goal(fullyConnected) then receiveConnectionUpdates.	
		
			if a-goal(fullyConnected) then receiveConnectionRequests.
			
			if a-goal(fullyConnected) then sendConnectionUpdates.
							
			if true then updateGoals.		
					
			if true then getPercepts.
			
			if true then updateBeliefState.
		
			if true then shareInformation.
			
			if a-goal(fullyConnected) then sendConnectionRequests.
			
			if bel(name(MyName), taskMaster(MyName)) then taskPlanning_TaskMaster.
			
			if bel(taskMaster(_)), bel(name(MyName)), not(bel(taskMaster(MyName))) then taskPlanning_OtherAgents.			
		
			if a-goal(fullyConnected), not(bel(taskMaster(_))) then findTaskMaster.
		}
	}
}